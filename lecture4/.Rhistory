citati("phytools")
citation("phytools")
citation("mvSLOUCH")
library(geiger)
?fitDiscrete
library(diversitree)
install.packages("~/Downloads/diversitree_0.9-7.tar.gz", repos = NULL, type = "source")
?prcomp
library(nlme)
install.packages('phylolm')
library(phylolm)
set.seed(123456)
tre = rtree(50)
x = rTrait(n=1,phy=tre)
X = cbind(rep(1,50),x)
y = rbinTrait(n=1,phy=tre, beta=c(-1,0.5), alpha=1 ,X=X)
dat = data.frame(trait01 = y, predictor = x)
fit = phyloglm(trait01~predictor,phy=tre,data=dat)
fit
fit0 = = phyloglm(trait01~1,phy=tre,data=dat)
fit0 = phyloglm(trait01~1,phy=tre,data=dat)
fit0
trait02 <- rep(c("A","B","C"),50)
trait02
trait02 <- rep(c("A","B","C","D","E"),10)
trait02
fit1 = phyloglm(trait01~trait02,phy=tre,data=dat)
fit1
phloglm
?phyloglm
anova(fit1,fit0)
AIC(fit1)
AIC(fit0)
AIC(fit)
plot(fit)
plot(fit1)
plot(fit0)
?rTrait
rbinTrait
?rbinTrait
conTrait = rTrait(n=1,phy=tre)
conTrait
hist(conTrait)
catTrait <- as.factor(sample(c("A","B","C"),size=length(tree$tip.label),replace=TRUE))
tre = rtree(50)
catTrait <- as.factor(sample(c("A","B","C"),size=length(tre$tip.label),replace=TRUE))
catTrait
dat = data.frame(binTrait = binTrait, conTrait = conTrait, catTrait = catTrait)
X = cbind(rep(1,50),conTrait)
binTrait = rbinTrait(n=1,phy=tre, beta=c(-1,0.5), alpha=1 ,X=X)
catTrait <- as.factor(sample(c("A","B","C"),size=length(tre$tip.label),replace=TRUE))
dat = data.frame(binTrait = binTrait, conTrait = conTrait, catTrait = catTrait)
fit = phyloglm(trait01~predictor,phy=tre,data=dat)
fit = phyloglm(binTrait ~ conTrait, phy=tre, data=dat)
fit = phyloglm(binTrait ~ conTrait, phy=tre, data=dat)
fit0 = phyloglm(binTrait ~ 1, phy=tre, data=dat)
data.frame(model=c("conTrait","Null model"),
log_lik=c(logLik(fit),logLik(fit0)),
AIC=c(AIC(fit),AIC(fit0)))
logLik(fit)
logLik(fit)[2]
logLik(fit)[1]
data.frame(model=c("conTrait","Null model"),
log_lik=c(logLik(fit)[2],logLik(fit0)[2]),
df=c(logLik(fit)[1],logLik(fit0)[1]),
AIC=c(AIC(fit),AIC(fit0)))
fit = phyloglm(binTrait ~ conTrait, phy=tre, data=dat)
fit0 = phyloglm(binTrait ~ 1, phy=tre, data=dat)
fit
fit0
plot(fit0)
plot(fit)
(fit = phyloglm(binTrait ~ conTrait, phy=tre, data=dat))
(fit0 = phyloglm(binTrait ~ 1, phy=tre, data=dat))
data.frame(model=c("conTrait","Null model"),
log_lik=c(logLik(fit)[2],logLik(fit0)[2]),
df=c(logLik(fit)[1],logLik(fit0)[1]),
AIC=c(AIC(fit),AIC(fit0)))
c(logLik(fit)[2],logLik(fit0)[2])
logLik(fit)[2]
logLik(fit)
logLik(fit)$df
logLik(fit)[2]
logLik(fit)[1]
data.frame(model=c("conTrait","Null model"),
log_lik=c(logLik(fit)$logLik,logLik(fit0)$logLik),
df=c(logLik(fit)$df,logLik(fit0)$df),
AIC=c(AIC(fit),AIC(fit0)))
(fit2 = phyloglm(binTrait ~ catTrait, phy=tre, data=dat))
data.frame(model=c("catTrait","Null model"),
log_lik=c(logLik(fit2)$logLik,logLik(fit0)$logLik),
df=c(logLik(fit2)$df,logLik(fit0)$df),
AIC=c(AIC(fit2),AIC(fit0)))
?log
log10(0.5)
log10(1)
0^1
0^1
0^3
setwd("~/Documents/gesneria/papers/flower_evolution/data")
library(geomorph)
library(shapes)
load("landmark_data.R")
test<-rawland[,,278]
rownames(test)<-seq(from=1,by=1,length=nrow(test))
plot(test,type='n');text(test,rownames(test))
sqrt(275)
17*17
16*16
install.packages(phyloch)
install.packages("phyloch")
install.packages("~/Downloads/phyloch_1.5-5 (1).tgz", repos = NULL)
read.beast("./data/seedplants.tre")
library(phyloch)
read.beast("./data/seedplants.tre")
install.packages('XML')
library(phyloch)
read.beast("./data/seedplants.tre")
read.beast("./data/seedplants.tre")
setwd("~/Documents/UdeM/lectures_Comparative_Methods")
read.beast("./data/seedplants.tre")
beasttree <- read.beast("./data/seedplants.tre")
plot(beasttree)
str(beasttree)
node.support(beasttree$posterior)
node.support(beasttree$posterior,cutoff=0,digits=2)
HPDbars(beasttree, label = "height_95%_HPD")
plot(beasttree)
HPDbars(beasttree, label = "height_95%_HPD")
node.support(beasttree$posterior,cutoff=0,digits=2)
118738/606880
?pcoa
library(phylobase)
library(adephylo)
trait3 <- fastBM(tree, sig2=0.1, nsim=1, internal=FALSE) #simulate a faster evolving trait
trait.table <- data.frame(trait1=trait1[,1], trait3)
obj <- phylo4d(tree, trait.table) # build a phylo4d object
op <- par(mar=c(1,1,1,1))
table.phylo4d(obj,cex.label=1,cex.symbol=1,ratio.tree=0.8,grid=FALSE,box=FALSE)
par(op) #reset graphical parameters to defaults
library(phytools)
trait3 <- fastBM(tree, sig2=0.1, nsim=1, internal=FALSE) #simulate a faster evolving trait
tree <- pbtree(n=30,nsim=1)
trait1 <- fastBM(tree, sig2=0.01, nsim=1, internal=FALSE)
trait2 <- fastBM(tree, sig2=0.05, nsim=1, internal=FALSE)
trait3 <- fastBM(tree, sig2=0.1, nsim=1, internal=FALSE)
trait.table <- data.frame(trait1, trait2, trait3)
obj <- phylo4d(tree, trait.table) # build a phylo4d object
op <- par(mar=c(1,1,1,1))
table.phylo4d(obj,cex.label=1,cex.symbol=1,ratio.tree=0.8,grid=FALSE,box=FALSE)
par(op) #reset graphical parameters to defaults
trait1 <- fastBM(tree, sig2=0.05, nsim=1, internal=FALSE)
trait2 <- fastBM(tree, sig2=0.1, nsim=1, internal=FALSE)
trait3 <- fastBM(tree, sig2=0.2, nsim=1, internal=FALSE)
trait.table <- data.frame(trait1, trait2, trait3)
obj <- phylo4d(tree, trait.table) # build a phylo4d object
op <- par(mar=c(1,1,1,1))
table.phylo4d(obj,cex.label=1,cex.symbol=1,ratio.tree=0.8,grid=FALSE,box=FALSE)
par(op) #reset graphical parameters to defaults
keep<-c("ABBA","ACSA","BEAL","FAGR","FRAM","LALA","PIRU","TIAM","ULAM")
spnames<-c("Abies","Acer","Betula","Fagus","Fraxinus","Larix","Picea","Tilia","Ulmus")
category<-as.factor(c("Gymnosperm","Angiosperm","Angiosperm","Angiosperm","Angiosperm",
"Gymnosperm","Gymnosperm","Angiosperm","Angiosperm"))
exclude<-seedplantstree$tip.label[!(seedplantstree$tip.label %in% keep)]
#reduce the seed plant phylogeny
seedplantstreereduced<-drop.tip(seedplantstree,exclude)
seedplantsdatareduced<-data.frame(seedplantsdata[rownames(seedplantsdata) %in%
seedplantstreereduced$tip.label,-(1:2)])
#PCA on the correlation matrix
seedplant.pca<-prcomp(seedplantsdatareduced,scale=TRUE)
summary(seedplant.pca)
colPalette=c("blue","red")
plot(seedplant.pca$x,type="n")
text(seedplant.pca$x,labels=spnames,cex=0.8,col=colPalette[category])
legend("bottomleft",pch=20,legend=levels(category),col=colPalette[category],pt.cex=1.5)
seedplantstree <- read.nexus("./data/seedplants.tre")
seedplantsdata <- read.csv2("./data/seedplants.csv")
# Remove species for which we don't have complete data
seedplantsdata <- na.omit(seedplantsdata)
# Remove species in the tree that are not in the data matrix
species.to.exclude <- seedplantstree$tip.label[!(seedplantstree$tip.label %in%
seedplantsdata$Code)]
seedplantstree <- drop.tip(seedplantstree,species.to.exclude)
rm(species.to.exclude)
setwd("~/Documents/UdeM/lectures_Comparative_Methods/course2")
seedplantstree <- read.nexus("./data/seedplants.tre")
seedplantsdata <- read.csv2("./data/seedplants.csv")
# Remove species for which we don't have complete data
seedplantsdata <- na.omit(seedplantsdata)
# Remove species in the tree that are not in the data matrix
species.to.exclude <- seedplantstree$tip.label[!(seedplantstree$tip.label %in%
seedplantsdata$Code)]
seedplantstree <- drop.tip(seedplantstree,species.to.exclude)
rm(species.to.exclude)
rownames(seedplantsdata) <- seedplantsdata$Code
seedplantsdata <- seedplantsdata[,-1]
# Order the data in the same order as the tip.label of the tree. In the present
# example, this was already the case.
seedplantsdata <- seedplantsdata[seedplantstree$tip.label,]
keep<-c("ABBA","ACSA","BEAL","FAGR","FRAM","LALA","PIRU","TIAM","ULAM")
spnames<-c("Abies","Acer","Betula","Fagus","Fraxinus","Larix","Picea","Tilia","Ulmus")
category<-as.factor(c("Gymnosperm","Angiosperm","Angiosperm","Angiosperm","Angiosperm",
"Gymnosperm","Gymnosperm","Angiosperm","Angiosperm"))
exclude<-seedplantstree$tip.label[!(seedplantstree$tip.label %in% keep)]
#reduce the seed plant phylogeny
seedplantstreereduced<-drop.tip(seedplantstree,exclude)
seedplantsdatareduced<-data.frame(seedplantsdata[rownames(seedplantsdata) %in%
seedplantstreereduced$tip.label,-(1:2)])
#PCA on the correlation matrix
seedplant.pca<-prcomp(seedplantsdatareduced,scale=TRUE)
summary(seedplant.pca)
colPalette=c("blue","red")
plot(seedplant.pca$x,type="n")
text(seedplant.pca$x,labels=spnames,cex=0.8,col=colPalette[category])
legend("bottomleft",pch=20,legend=levels(category),col=colPalette[category],pt.cex=1.5)
seedplant.ppca<-phyl.pca(seedplantstreereduced,seedplantsdatareduced,
method="BM",mode="corr")
plot(seedplant.ppca$S,type="n")
text(seedplant.ppca$S,labels=spnames,cex=0.8,col=colPalette[category])
legend("bottomright",pch=20,legend=levels(category),col=colPalette[category],pt.cex=1.5)
seedplant.ppca
str(seedplant.ppca)
seedplant.ppca<-phyl.pca(seedplantstreereduced,seedplantsdatareduced,
method="BM",mode="corr")
plot(seedplant.ppca$S,type="n")
text(seedplant.ppca$S,labels=spnames,cex=0.8,col=colPalette[category])
legend("bottomright",pch=20,legend=levels(category),col=colPalette[category],pt.cex=1.5)
seedplant.ppca
str(seedplant.ppca)
summary(seedplant.ppca)
require(ape)
seedplantstree <- read.nexus("./data/seedplants.tre")
seedplantsdata <- read.csv2("./data/seedplants.csv")
# Remove species for which we don't have complete data
seedplantsdata <- na.omit(seedplantsdata)
# Remove species in the tree that are not in the data matrix
species.to.exclude <- seedplantstree$tip.label[!(seedplantstree$tip.label %in%
seedplantsdata$Code)]
seedplantstree <- drop.tip(seedplantstree,species.to.exclude)
rm(species.to.exclude)
# Name the rows of the data.frame with the species codes used as tree labels
rownames(seedplantsdata) <- seedplantsdata$Code
seedplantsdata <- seedplantsdata[,-1]
# Order the data in the same order as the tip.label of the tree. In the present
# example, this was already the case.
seedplantsdata <- seedplantsdata[seedplantstree$tip.label,]
height <- seedplantsdata$height
height
seedplantsdata
setwd("~/Documents/UdeM/lectures_Comparative_Methods/course3")
seedplantstree <- read.nexus("./data/seedplants.tre")
seedplantsdata <- read.csv2("./data/seedplants.csv")
# Remove species for which we don't have complete data
seedplantsdata <- na.omit(seedplantsdata)
# Remove species in the tree that are not in the data matrix
species.to.exclude <- seedplantstree$tip.label[!(seedplantstree$tip.label %in%
seedplantsdata$Code)]
seedplantstree <- drop.tip(seedplantstree,species.to.exclude)
rm(species.to.exclude)
# Name the rows of the data.frame with the species codes used as tree labels
rownames(seedplantsdata) <- seedplantsdata$Code
seedplantsdata <- seedplantsdata[,-1]
# Order the data in the same order as the tip.label of the tree. In the present
# example, this was already the case.
seedplantsdata <- seedplantsdata[seedplantstree$tip.label,]
height <- seedplantsdata$height
height
levels(height) <- c("small","medium","tall")
height
height <- factor(seedplantsdata$height, levels=c("small","medium","tall"))
height
names(height) <- rownames(seedplantdata)
names(height) <- rownames(seedplantsdata)
height
matrix(c(0, 2, 1, 2, 0, 1, 2, 2, 0), 3)
matrix(c(0, 1, 2, 1, 0, 1, 2, 1, 0), 3)
library(geiger)
results.anc <- data.frame(model=c("ER","ARD","custom"),
lnL=numeric(3),AICc=numeric(3),params=numeric(3))
# ER
results.anc <- data.frame(model=c("ER","ARD","custom"),
lnL=numeric(3),AICc=numeric(3),params=numeric(3))
# ER
(mod_fit <- fitDiscrete(seedplantstree,char1,model="ER"))
(mod_fit <- fitDiscrete(seedplantstree,height,model="ER"))
results.anc[1,-1]<- c(lnL=mod_fit$opt$lnL,AICc=mod_fit$opt$aicc,mod_fit$opt$k)
# ARD
(mod_fit <- fitDiscrete(seedplantstree,height,model="ARD"))
results.anc[2,-1]<- c(lnL=mod_fit$opt$lnL,AICc=mod_fit$opt$aicc,mod_fit$opt$k)
# hum.2.other
(mod_fit <- fitDiscrete(seedplantstree,height,
model=matrix(c(0, 1, 2, 1, 0, 1, 2, 1, 0), 3)) )
results.anc[3,-1]<- c(lnL=mod_fit$opt$lnL,AICc=mod_fit$opt$aicc,mod_fit$opt$k)
# Order the results by AICc
results.anc <- results.anc[order(results.anc$AICc),]
results.anc
mod_fit
ARD_fit <- fitDiscrete(seedplantstree,height,model="ARD")
ARD_fit
ARD_fit
height
height <- factor(seedplantsdata$height)
height
names(height) <- rownames(seedplantsdata)
custom_fit <- fitDiscrete(seedplantstree,height,
model=matrix(c(0, 1, 1, 1, 0, 2, 1, 2, 0), 3))
results.anc[3,-1]<- c(lnL=custom_fit$opt$lnL,AICc=custom_fit$opt$aicc,custom_fit$opt$k)
results.anc <- results.anc[order(results.anc$AICc),]
results.anc
custom_fit
ARD_fit
increase_fit <- fitDiscrete(seedplantstree,height,
model=matrix(c(0, 1, 2, 2, 0, 3, 1, 3, 0), 3))
increase_fit
increase_fit
str(increase_fit)
ARD_fit$opt$aicc
require(diversitree)
lik.mkn <- make.mkn(spe.tree, char1, 3, control=list(root=ROOT.EQUI))
?make.mkn
lik.mkn <- make.mkn(seedplantstree, height, k=3, control=list(root=ROOT.EQUI))
char1 <- as.numeric(height)
char1
names(char1) <- names(height)
char1
lik.mkn <- make.mkn(seedplantstree, char1, k=3, control=list(root=ROOT.EQUI))
argnames(lik.mkn)
lik.mkn.base <- constrain(lik.mkn, q21 ~ q13, q23 ~ q32, q12 ~ q31)
lik.mkn.base
p.mkn <- starting.point.musse(seedplantstree, 3)
fit.mkn <- find.mle(lik.mkn.base, p.mkn[argnames(lik.mkn.base)])
fit.mkn[1:2]
t(asr.marginal(lik.mkn.base,coef(fit.mkn)))
increase_fit
fit.mkn[1:2]
increase_fit
co <- c("#1b9e77","#7570b3","#d95f02")
plot(seedplantstree,type="p",FALSE,label.offset=0.6,cex=0.7,no.margin=TRUE,
edge.color="gray32",tip.color="gray32")
tiplabels(pch=21,bg=co[as.numeric(height)],col="gray32",cex=1,adj=0.6)
nodelabels(pie=st,piecol=co,cex=0.5,col="gray32",)
st <- t(asr.marginal(lik.mkn.base,coef(fit.mkn)))
nodelabels(pie=st,piecol=co,cex=0.5,col="gray32",)
legend("bottomleft",legend=levels(height),
pch=20,col=co,bty="n",
text.col="gray32",cex=0.8,pt.cex=1.5)
anc_node<-factor(character(nrow(st)),levels=levels(pollinator.data))
anc_node<-factor(character(nrow(st)),levels=levels(height))
for(i in 1:length(anc_node)) {
anc_node[i] <- levels(height)[st[i,]==max(st[i,])]
plot(seedplantstree,type="p",FALSE,label.offset=0.6,cex=0.7,no.margin=TRUE,
edge.color="gray32",tip.color="gray32")
}
for(i in 1:length(anc_node)) {
anc_node[i] <- levels(height)[st[i,]==max(st[i,])]
}
anc_node
plot(seedplantstree,type="p",FALSE,label.offset=0.6,cex=0.7,no.margin=TRUE,
edge.color="gray32",tip.color="gray32")
tiplabels(pch=21,bg=co[as.numeric(height)],col="gray32",cex=1,adj=0.6)
nodelabels(pch=21,bg=co[as.numeric(anc_node)],cex=1,col="gray32",)
nodelabels(pie=st,piecol=co,cex=0.5,col="gray32",)
states <- c(as.vector(height),as.vector(anc_node))
states
root.node <- as.numeric(names(branching.times(spe.tree)[branching.times(spe.tree)==max(branching.times(spe.tree))]))
root.node <- as.numeric(names(branching.times(seedplantstree)[branching.times(seedplantstree)==max(branching.times(seedplantstree))]))
edges <- myanctree$edge[myanctree$edge[,1]!=root.node,]
edges <- seedplantstree$edge[seedplantstree$edge[,1]!=root.node,]
change.matrix <- matrix(nrow=3,ncol=3,0)
rownames(change.matrix) <- colnames(change.matrix) <- levels(pollinator.data)
rownames(change.matrix) <- colnames(change.matrix) <- levels(height)
rownames(change.matrix) <- colnames(change.matrix) <- levels(height)
for (i in 1:nrow(edges)) {
first_state <- states[edges[i,1]]
second_state <- states[edges[i,2]]
change.matrix[seq(1,3,1)[first_state==levels(seedplantstree)],
seq(1,3,1)[second_state==levels(seedplantstree)]] <-
change.matrix[seq(1,3,1)[first_state==levels(seedplantstree)],
seq(1,3,1)[second_state==levels(seedplantstree)]] + 1
}
change.matrix
edges
change.matrix <- matrix(nrow=3,ncol=3,0)
change.matrix
rownames(change.matrix) <- colnames(change.matrix) <- levels(height)
change.matrix
states
i=1
first_state <- states[edges[i,1]]
second_state <- states[edges[i,2]]
first_state
second_state
seq(1,3,1)
first_state==levels(seedplantstree)
first_state==levels(height)
for (i in 1:nrow(edges)) {
first_state <- states[edges[i,1]]
second_state <- states[edges[i,2]]
change.matrix[seq(1,3,1)[first_state==levels(height)],
seq(1,3,1)[second_state==levels(height)]] <-
change.matrix[seq(1,3,1)[first_state==levels(height)],
seq(1,3,1)[second_state==levels(height)]] + 1
}
change.matrix
mtree <- make.simmap(seedplantstree, height, model = "ER")
chartree <- make.simmap(seedplantstree, height, model = "ER")
setNames(c("blue", "red", "yellow"), sort(unique(x)))
cols <- setNames(c("#1b9e77","#7570b3","#d95f02"), sort(unique(height)))
plotSimmap(chartree, cols, pts = FALSE, lwd = 3)
plotSimmap(chartree, cols, pts = FALSE, lwd = 3,cex=0.8)
plotSimmap(chartree, cols, pts = FALSE, lwd = 3, fsize=0.8)
plotSimmap(chartree, cols, pts = FALSE, lwd = 3, fsize=0.6)
add.simmap.legend(colors = cols, vertical = FALSE, prompt = FALSE, x = 0, y = 24)
add.simmap.legend(colors = cols, vertical = TRUE, prompt = FALSE, x = 0, y = 24)
add.simmap.legend(colors = cols, vertical = TRUE, prompt = FALSE, x = 0, y = 0)
add.simmap.legend(colors = cols, vertical = FALSE, prompt = FALSE, x = 0, y = 0)
plotSimmap(chartree, cols, pts = FALSE, lwd = 3, fsize=0.6)
add.simmap.legend(colors = cols, vertical = FALSE, prompt = FALSE, x = 0, y = 0)
add.simmap.legend(colors = cols, vertical = FALSE, prompt = FALSE, x = 0, y = 2)
chartrees <- make.simmap(seedplantstree, height, model = "ER", nsim = 500)
res_simmap <- describe.simmap(chartrees, plot = FALSE)
res_simmap
res_simmap$ace
plot(seedplantstree,type="p",FALSE,label.offset=0.6,cex=0.7,no.margin=TRUE,
edge.color="gray32",tip.color="gray32")
tiplabels(pch=21,bg=co[as.numeric(height)],col="gray32",cex=1,adj=0.6)
nodelabels(pie=res_simmap$ace,piecol=co,cex=0.5,col="gray32")
legend("bottomleft",legend=levels(height),
pch=20,col=co,bty="n",
text.col="gray32",cex=0.8,pt.cex=1.5)
res_simmap
chartree <- make.simmap(seedplantstree, height, model = model=matrix(c(0, 1, 2, 2, 0, 3, 1, 3, 0), 3))
chartree <- make.simmap(seedplantstree, height, model=matrix(c(0, 1, 2, 2, 0, 3, 1, 3, 0), 3))
chartrees <- make.simmap(seedplantstree, height,
model = model=matrix(c(0, 1, 2, 2, 0, 3, 1, 3, 0), 3), nsim = 200)
chartrees <- make.simmap(seedplantstree, height,
model=matrix(c(0, 1, 2, 2, 0, 3, 1, 3, 0), 3), nsim = 200)
(res_simmap <- describe.simmap(chartrees, plot = FALSE))
plot(seedplantstree,type="p",FALSE,label.offset=0.6,cex=0.7,no.margin=TRUE,
edge.color="gray32",tip.color="gray32")
tiplabels(pch=21,bg=co[as.numeric(height)],col="gray32",cex=1,adj=0.6)
nodelabels(pie=res_simmap$ace,piecol=co,cex=0.5,col="gray32")
legend("bottomleft",legend=levels(height),
pch=20,col=co,bty="n",
text.col="gray32",cex=0.8,pt.cex=1.5)
phenogram(seedplantstree,height,spread.labels=TRUE)
phenogram(tree,trait3,spread.labels=TRUE)
phenogram(tree,trait3,spread.labels=TRUE)
maxH <- seedplantsdata$maxH
maxH
names(maxH) <- rownames(seedplantsdata)
names(maxH) <- rownames(seedplantsdata)
maxH
MLreconstruction <- ace(maxH, seedplantstree, type="continuous", method="ML")
MLreconstruction
?ace
MLreconstruction$ace
MLreconstruction$CI95
maxH.cat <- cut(maxH,breaks=8,labels=FALSE)
ColorPalette <- brewer.pal(n = 8, name = "Blues")
library(RColorBrewer)
ColorPalette <- brewer.pal(n = 8, name = "Blues")
plot(seedplantstree, type="p", use.edge.length = TRUE, label.offset=0.2,cex=1)
plot(seedplantstree, type="p", use.edge.length = TRUE, label.offset=0.1,cex=1)
plot(seedplantstree, type="p", use.edge.length = TRUE, label.offset=0.01,cex=1)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0.6)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0.005)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=1)
?plot.phylo
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=1)
?tip.labels
?tiplabels
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0)
plot(seedplantstree, type="p", use.edge.length = TRUE, label.offset=0.01,cex=1)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0.5)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=1)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0.5)
plot(seedplantstree, type="p", use.edge.length = TRUE, label.offset=0.01,cex=1)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=1)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0.45)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0.501)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0.505)
plot(seedplantstree, type="p", use.edge.length = TRUE, label.offset=0.01,cex=1)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0.505)
plot(seedplantstree, type="p", use.edge.length = TRUE, label.offset=0.01,cex=0.6)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0.505)
legend(0,0,legend=levels(cut(maxH,breaks=8)),
col=ColorPalette,pch=20,bty="n",cex=0.7,pt.cex=1.5,ncol=4)
op<-par(xpd=TRUE)
legend(0,0,legend=levels(cut(maxH,breaks=8)),
col=ColorPalette,pch=20,bty="n",cex=0.7,pt.cex=1.5,ncol=4)
par(op) #reset graphical parameters to defaults
nodelabels(pch=21,bg=ColorPalette[maxH.cat],cex=1,col="gray32",)
maxH.cat <- cut(maxH,breaks=20,labels=FALSE)
# Color palette
require(RColorBrewer)
ColorPalette <- brewer.pal(n = 20, name = "Blues")
ColorPalette <- brewer.pal(n = 9, name = "Blues")
maxH.cat <- cut(maxH,breaks=9,labels=FALSE)
ColorPalette <- brewer.pal(n = 9, name = "Blues")
plot(seedplantstree, type="p", use.edge.length = TRUE, label.offset=0.01,cex=0.6)
tiplabels(pch=21,bg=ColorPalette[maxH.cat],col="black",cex=1,adj=0.505)
nodelabels(pch=21,bg=ColorPalette[maxH.cat],cex=1,col="gray32",)
op<-par(xpd=TRUE)
legend(0,0,legend=levels(cut(maxH,breaks=8)),
col=ColorPalette,pch=20,bty="n",cex=0.7,pt.cex=1.5,ncol=4)
par(op) #reset graphical parameters to defaults
?phenogram
